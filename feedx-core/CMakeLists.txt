cmake_minimum_required(VERSION 3.16)

project(feedx-core LANGUAGES CXX)

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)

cmake_policy(SET CMP0167 NEW)

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)

if (NOT CMAKE_BUILD_TYPE)
    set(CMAKE_BUILD_TYPE "Release" CACHE STRING "Build type" FORCE)
endif()

set(CMAKE_CXX_FLAGS_DEBUG "-g")
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG")

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${CMAKE_BINARY_DIR}/Debug)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${CMAKE_BINARY_DIR}/Release)

if(NOT CMAKE_CONFIGURATION_TYPES)
    if(CMAKE_BUILD_TYPE STREQUAL "Debug")
        set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/Debug)
    elseif(CMAKE_BUILD_TYPE STREQUAL "Release")
        set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/Release)
    endif()
endif()

find_package(Boost REQUIRED COMPONENTS filesystem)
find_package(OpenSSL REQUIRED)

file(GLOB_RECURSE SRC_FILES CONFIGURE_DEPENDS src/*.cpp)

add_executable(feedx-core
    ${SRC_FILES}
)

target_include_directories(feedx-core PRIVATE
    include
    ${OPENSSL_INCLUDE_DIR}
)

target_link_libraries(feedx-core PRIVATE
    Boost::filesystem
    OpenSSL::SSL
    OpenSSL::Crypto
)


# find_package(Boost REQUIRED COMPONENTS filesystem)
# find_package(OpenSSL REQUIRED)
# find_package(nlohmann_json REQUIRED)
# find_package(Threads REQUIRED)
# find_package(CURL REQUIRED)
# find_package(jwt-cpp CONFIG REQUIRED)

# include(FetchContent)

# FetchContent_Declare(
#   simdjson
#   GIT_REPOSITORY https://github.com/simdjson/simdjson.git
#   GIT_SHALLOW TRUE
#   )

#   set(SIMDJSON_JUST_LIBRARY ON CACHE INTERNAL "")
#   set(SIMDJSON_BUILD_STATIC ON CACHE INTERNAL "")
   
#   FetchContent_MakeAvailable(simdjson)

# target_link_libraries(coinapi PRIVATE
#     Boost::filesystem
#     OpenSSL::SSL
#     OpenSSL::Crypto
#     nlohmann_json::nlohmann_json
#     Threads::Threads
#     simdjson
#     CURL::libcurl
#     jwt-cpp::jwt-cpp
# )

